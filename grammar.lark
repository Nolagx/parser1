start: (_NEWLINE)* (statement (_NEWLINE)+)* (statement)?

?statement: relation_declaration
          | fact
          | rule
          | query
          | assign_string
          | assign_span
          | assign_int
          | assign_var

assign_string: var_name "=" string -> assign_literal_string
             | var_name "=" "read" "(" string ")" -> assign_string_from_file_string_param
             | var_name "=" "read" "(" var_name ")" -> assign_string_from_file_var_param

assign_span: var_name "=" span

assign_int: var_name "=" int

assign_var: var_name "=" var_name

relation_declaration: "new" _separator relation_name "(" decl_term_list ")"

decl_term_list: decl_term ("," decl_term)*

?decl_term: "str" -> decl_string
          | "spn" -> decl_span
          | "int" -> decl_int

rule: rule_head "<-" rule_body

rule_head: relation_name "(" free_var_name_list ")"

rule_body: rule_body_relation_list

rule_body_relation_list: rule_body_relation ("," rule_body_relation)*

?rule_body_relation: relation
                   | ie_relation

ie_relation: function_name "<" term_list ">" "(" term_list ")" -> func_ie_relation
           | "extract" _separator "RGX" "<" (term_list) ">" "(" term_list ")" "from" _separator var_name -> rgx_ie_relation

query: "?" relation

relation: relation_name "(" term_list ")"

term_list: term ("," term)*

?term: span
     | string
     | int
     | var_name
     | free_var_name

fact: relation_name "(" fact_term_list ")"

fact_term_list: fact_term ("," fact_term)*

?fact_term: span
          | string
          | int
          | var_name

span: "[" int "," int ")"

_separator: (_WS_INLINE | _LINE_OVERFLOW_ESCAPE)+

int: INT -> integer

string: STRING -> string
       | STRING ((_LINE_OVERFLOW_ESCAPE)* STRING)+  -> multiline_string

free_var_name_list: free_var_name ("," free_var_name)*

relation_name: LOWER_CASE_NAME
             | UPPER_CASE_NAME

function_name: LOWER_CASE_NAME
             | UPPER_CASE_NAME

var_name: LOWER_CASE_NAME

free_var_name : UPPER_CASE_NAME

LOWER_CASE_NAME: ("_"|LCASE_LETTER) ("_"|LETTER|DIGIT)*
UPPER_CASE_NAME: UCASE_LETTER ("_"|LETTER|DIGIT)*

_COMMENT: "#" /[^\n]*/

_LINE_OVERFLOW_ESCAPE: "\\" _NEWLINE

_NEWLINE: CR? LF
CR : /\r/
LF : /\n/


// common definitions can be found at: https://github.com/lark-parser/lark/blob/master/lark/grammars/common.lark
%import common.LCASE_LETTER
%import common.UCASE_LETTER
%import common.LETTER
%import common.DIGIT
%import common.WS_INLINE -> _WS_INLINE
%ignore _WS_INLINE
%import common.ESCAPED_STRING -> STRING
%import common.INT -> INT
%ignore _LINE_OVERFLOW_ESCAPE
%ignore _COMMENT